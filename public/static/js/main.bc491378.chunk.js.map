{"version":3,"sources":["hoc/ux.js","components/Layouts/Layout.js","store/actions/counter.js","constants/counterTypes.js","containers/Home/Home.js","containers/ShowTodo/ShowTodo.js","containers/AddTodo/AddTodo.js","components/Header/Header.js","components/Signup/Siginup.js","components/Login/Login.js","App.js","serviceWorker.js","store/reducers/counter.js","store/reducers/todo.js","constants/actionTypes.js","store/store.js","index.js"],"names":["Aux","props","children","layout","className","UserINC","number","console","log","type","data","addFive","dispatch","a","getUserAsync","response","alert","name","fetch","json","Home","userCount","e","setState","target","value","state","handleSubmit","bind","this","input","preventDefault","counter","onChange","onClick","onIncrementByUser","onIncrement","onDecrement","Component","connect","Number","ShowTodo","AddTodo","todotodo","todo","class","initialValues","onSubmit","values","setSubmitting","history","push","validationSchema","Yup","shape","email","required","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleReset","htmlFor","component","disabled","Header","to","SignUp","firstName","lastName","password","confirmPassword","min","oneOf","fields","render","status","Login","sessionStorage","setItem","App","useEffect","onLoad","auth","getItem","path","Siginup","Boolean","window","location","hostname","match","initailState","CounterReducer","action","initialState","todos","TodosReducer","actionTypes","filter","_item","rootReducers","combineReducers","composeEnhancers","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","sagaMiddelware","createSagaMidleware","store","createStore","applyMiddleware","next","result","getState","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc491378.chunk.js","sourcesContent":["const Aux = (props)=> props.children\n\nexport default Aux;","import React from \"react\"\n\nimport Aux from '../../hoc/ux'\nimport './Layout.css'\n\nconst layout = (props) => (\n    <Aux>\n        <div className=\"jumbotron\">\n            {props.children}\n        </div>\n    </Aux>\n)\n\nexport default layout;","import {\n    INC,\n    DEC,\n    ADD_FIVE\n} from '../../constants/counterTypes'\n\nexport const increment = () => {\n    return {\n        type: INC\n    }\n}\nexport const decrement = () => {\n    return {\n        type: DEC\n    }\n}\n\nexport const UserINC = (number) => {\n    console.log(\"UserINC\")\n    return {\n        type: ADD_FIVE,\n        data: number\n    }\n}\nexport const addFive = (number) => {\n    return async dispatch => {\n        // setTimeout(() => {\n        //     dispatch(UserINC(number))\n        // }, 2000);\n        try {\n            const response = await getUserAsync(\"Rabson\")\n            console.log(response);\n            // var g1 = getUserAsync(\"Rabson\");\n            // var response= g1.next();\n            // while(!response.done){\n            //     response = g1.next();\n            // }\n            // const final =  await response.value;\n            // console.log(final)\n            dispatch(UserINC(number));\n          }\n          catch(error) {\n              alert(error)\n          }\n      \n          return 'done';\n    }\n}\n\nasync function getUserAsync(name){\n  let response = await fetch(`https://api.github.com/users/${name}`);\n  let data = await response.json()\n  return data;\n}\n\n// function* getUserAsync(name) {\n//   console.log(\"getUserAsync called\")\n//   let response = yield fetch(`https://api.github.com/users/${name}`);\n//   console.log(response)\n//   let data = response.json()\n//   debugger\n//   console.log(data)\n//   return data;\n// }","export const INC = \"INC\";\nexport const DEC = \"DRC\";\nexport const ADD_FIVE = \"ADD_FIVE\";","import React, { Component } from 'react';\nimport Aux from '../../hoc/ux';\nimport { connect } from 'react-redux';\nimport { increment, decrement, addFive } from '../../store/actions/counter';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            number: 0\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    userCount = (e) => {\n        this.setState({ number: e.target.value })\n    }\n    handleSubmit(e) {\n        alert('The value is: ' + this.input.value);\n        e.preventDefault();\n    }\n    render() {\n        return (<Aux>\n            Home\n            <div>\n                {this.props.counter}\n                <input value={this.state.number} type=\"number\" onChange={(e) => this.userCount(e)} />\n                <button onClick={() => this.props.onIncrementByUser(this.state.number)} >Increment by user</button>\n                <button onClick={this.props.onIncrement} >Increment</button>\n                <button onClick={this.props.onDecrement}>Decrement</button>\n            </div>\n\n\n\n            {/* <form onSubmit={this.handleSubmit}>\n                <label>\n                    Name:<input type=\"text\" ref={(input) => this.input = input} />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form> */}\n        </Aux>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.counter.counter\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIncrement: () => dispatch(increment()),\n        onDecrement: () => dispatch(decrement()),\n        onIncrementByUser: (number) => dispatch(addFive(Number(number)))\n        // onIncrement: () => dispatch({ type: INC }),\n        // onDecrement: () => dispatch({ type: DEC }),\n        // onIncrementByUser: (number) => dispatch({ type: ADD_FIVE, payload: Number(number) })\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component } from 'react';\nimport Aux from '../../hoc/ux';\nimport { connect } from 'react-redux';\nimport { increment, decrement, addFive } from '../../store/actions/counter';\n\nclass ShowTodo extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            number: 0\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    userCount = (e) => {\n        this.setState({ number: e.target.value })\n    }\n    handleSubmit(e) {\n        alert('The value is: ' + this.input.value);\n        e.preventDefault();\n    }\n    render() {\n        return (<Aux> ShowTodo </Aux>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.counter.counter\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIncrement: () => dispatch(increment()),\n        onDecrement: () => dispatch(decrement()),\n        onIncrementByUser: (number) => dispatch(addFive(Number(number)))\n        // onIncrement: () => dispatch({ type: INC }),\n        // onDecrement: () => dispatch({ type: DEC }),\n        // onIncrementByUser: (number) => dispatch({ type: ADD_FIVE, payload: Number(number) })\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowTodo);","import React, { Component } from 'react';\nimport Aux from '../../hoc/ux';\nimport { connect } from 'react-redux';\n\nimport { increment, decrement, addFive } from '../../store/actions/counter';\n\n// form\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nclass AddTodo extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            todotodo: 'dgsfhd'\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        alert('The value is: ' + this.state.todo);\n        e.preventDefault();\n    }\n    render() {\n        return (<Aux>\n            <div class=\"container\">\n                <Formik\n                    initialValues={{ todo: ''}}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setSubmitting(false);\n                        this.props.history.push('/showtodo')\n                        // setTimeout(() => {\n                        //     alert(JSON.stringify(values, null, 2));\n                        // }, 500);\n                    }}\n                    validationSchema={Yup.object().shape({\n                        todo: Yup.string()\n                            .email()\n                            .required('Required'),\n    \n                    })}\n                >\n                    {props => {\n                        const {\n                            values,\n                            touched,\n                            errors,\n                            dirty,\n                            isSubmitting,\n                            handleChange,\n                            handleBlur,\n                            handleSubmit,\n                            handleReset,\n                        } = props;\n                        return (\n                            <Form onSubmit={handleSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"firstName\">Todo</label>\n                                    <Field name=\"todo\" type=\"text\" className={'form-control' + (errors.todo && touched.todo ? ' is-invalid' : '')} />\n                                    <ErrorMessage name=\"todo\" component=\"div\" className=\"invalid-feedback\" />\n                                </div>\n                          \n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary mr-2\" disabled={isSubmitting} >Add todo</button>\n                                </div>\n                            </Form>\n                        );\n                    }}\n                </Formik>\n            </div>\n        </Aux>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        counter: state.counter.counter\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onIncrement: () => dispatch(increment()),\n        onDecrement: () => dispatch(decrement()),\n        onIncrementByUser: (number) => dispatch(addFive(Number(number)))\n        // onIncrement: () => dispatch({type: INC }),\n        // onDecrement: () => dispatch({type: DEC }),\n        // onIncrementByUser: (number) => dispatch({type: ADD_FIVE, payload: Number(number) })\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo);","import React from 'react';\n\nimport { NavLink } from 'react-router-dom'\n\nconst Header = () => (\n    <div className=\"header\">\n        <NavLink to=\"/\" className=\"logo\">Todo World</NavLink>\n        <div className=\"header-right\">\n            <NavLink to=\"/\">Home</NavLink>\n            <NavLink to=\"/showtodo\">Show todo</NavLink>\n            <NavLink to=\"/addtodo\">Add todo</NavLink>\n        </div>\n    </div>\n);\n\nexport default Header;","import React, { Component } from 'react';\nimport Aux from '../../hoc/ux';\n\n// form\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nclass SignUp extends Component {\n\n    // constructor(props) {\n    //     super(props)\n    // }\n\n\n    render() {\n        return (<Aux>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3\">\n                        <Formik\n                            initialValues={{\n                                firstName: '',\n                                lastName: '',\n                                email: '',\n                                password: '',\n                                confirmPassword: ''\n                            }}\n                            validationSchema={Yup.object().shape({\n                                firstName: Yup.string()\n                                    .required('First Name is required'),\n                                lastName: Yup.string()\n                                    .required('Last Name is required'),\n                                email: Yup.string()\n                                    .email('Email is invalid')\n                                    .required('Email is required'),\n                                password: Yup.string()\n                                    .min(6, 'Password must be at least 6 characters')\n                                    .required('Password is required'),\n                                confirmPassword: Yup.string()\n                                    .oneOf([Yup.ref('password'), null], 'Passwords must match')\n                                    .required('Confirm Password is required')\n                            })}\n                            onSubmit={fields => {\n                                // alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\n                                this.props.history.push('/showtodo')\n                            }}\n                            render={({ errors, status, touched }) => (\n                                <Form>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"firstName\">First Name</label>\n                                        <Field name=\"firstName\" type=\"text\" className={'form-control' + (errors.firstName && touched.firstName ? ' is-invalid' : '')} />\n                                        <ErrorMessage name=\"firstName\" component=\"div\" className=\"invalid-feedback\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"lastName\">Last Name</label>\n                                        <Field name=\"lastName\" type=\"text\" className={'form-control' + (errors.lastName && touched.lastName ? ' is-invalid' : '')} />\n                                        <ErrorMessage name=\"lastName\" component=\"div\" className=\"invalid-feedback\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\">Email</label>\n                                        <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                        <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"password\">Password</label>\n                                        <Field name=\"password\" type=\"password\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                        <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                                        <Field name=\"confirmPassword\" type=\"password\" className={'form-control' + (errors.confirmPassword && touched.confirmPassword ? ' is-invalid' : '')} />\n                                        <ErrorMessage name=\"confirmPassword\" component=\"div\" className=\"invalid-feedback\" />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <button type=\"submit\" className=\"btn btn-primary mr-2\">Register</button>\n                                        {/* <button type=\"reset\" className=\"btn btn-secondary\">Reset</button> */}\n                                    </div>\n                                </Form>\n                            )}\n                        />\n                    </div>\n                </div>\n            </div>\n            {/* <button onClick={() => this.props.history.push('/showtodo')} >\n                sign up\n        </button> */}\n\n\n        </Aux>)\n    }\n}\n\n\n\nexport default (SignUp);","import React, { Component } from 'react';\nimport Aux from '../../hoc/ux';\n\n// form\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nclass Login extends Component {\n\n    // constructor(props) {\n    //     super(props)\n    // }\n\n\n    render() {\n        return (<Aux>\n\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 offset-md-3\">\n                        {/* <button onClick={() => this.props.history.push('/showtodo')} >\n                login        </button>        */}\n                        <Formik\n                            initialValues={{ email: '', password: '' }}\n                            onSubmit={(values, { setSubmitting }) => {\n                                setSubmitting(false);\n                                sessionStorage.setItem('auth',true)\n                                this.props.history.push('/showtodo')\n\n\n                                // setTimeout(() => {\n                                //     alert(JSON.stringify(values, null, 2));\n                                // }, 500);\n                            }}\n                            validationSchema={Yup.object().shape({\n                                email: Yup.string()\n                                    .email()\n                                    .required('Required'),\n                                password: Yup.string()\n                                    .required('Required'),\n                            })}\n                        >\n                            {props => {\n                                const {\n                                    values,\n                                    touched,\n                                    errors,\n                                    dirty,\n                                    isSubmitting,\n                                    handleChange,\n                                    handleBlur,\n                                    handleSubmit,\n                                    handleReset,\n                                } = props;\n                                return (\n                                    <Form onSubmit={handleSubmit}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"firstName\">Email</label>\n                                            <Field name=\"email\" type=\"text\" className={'form-control' + (errors.email && touched.email ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"email\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"firstName\">Password</label>\n                                            <Field name=\"password\" type=\"text\" className={'form-control' + (errors.password && touched.password ? ' is-invalid' : '')} />\n                                            <ErrorMessage name=\"password\" component=\"div\" className=\"invalid-feedback\" />\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <button type=\"submit\" className=\"btn btn-primary mr-2\" disabled={isSubmitting} >Register</button>\n                                            {/* <button type=\"reset\" className=\"btn btn-secondary\">Reset</button> */}\n                                        </div>\n\n                                        {/* <button\n                                            type=\"button\"\n                                            className=\"outline\"\n                                            onClick={handleReset}\n                                        >Reset</button>\n                                        <button type=\"submit\"\n                                        disabled={isSubmitting} \n                                        >\n                                            Submit</button> */}\n                                    </Form>\n                                );\n                            }}\n                        </Formik>\n                    </div> </div> </div>\n\n        </Aux>)\n    }\n}\n\n\n\nexport default (Login);","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport { Route, Switch } from 'react-router-dom'\n\nimport Layout from './components/Layouts/Layout';\nimport Home from './containers/Home/Home';\nimport ShowTodo from './containers/ShowTodo/ShowTodo';\nimport AddTodo from './containers/AddTodo/AddTodo';\nimport Header from './components/Header/Header';\nimport Siginup from './components/Signup/Siginup';\nimport Login from './components/Login/Login';\n// import AuthenticatedRoute from \"./hoc/AuthenticatedRoute\";\n// import UnauthenticatedRoute from \"./hoc/UnauthenticatedRoute\";\n\n\nimport Aux from './hoc/ux';\nfunction App() {\n\n  // const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      // await Auth.currentSession();\n      // userHasAuthenticated(true);\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  let auth = sessionStorage.getItem(\"auth\") ? true : false;\n  return (\n    <div className=\"App\">\n      {auth ? (\n        <Aux>\n          <Header />\n          <Layout>\n            <Switch>\n              <Route path=\"/addtodo\" component={AddTodo} />\n              <Route path=\"/signup\" component={Siginup} />\n              <Route path=\"/showtodo\" component={ShowTodo} />\n              <Route path=\"/Home\" component={Home} />\n            </Switch>\n          </Layout>\n        </Aux>\n      ) :\n        (<Layout>\n            <Switch>\n              <Route path=\"/\" component={Login} />\n            </Switch>\n          </Layout>)\n      }\n    </div>\n  );\n}\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    INC,\n    DEC,\n    ADD_FIVE\n} from '../../constants/counterTypes'\n\nconst initailState = {\n    counter: 0\n}\n\nconst CounterReducer = (state = initailState, action) => {\n    switch (action.type) {\n        case INC: {\n            return {\n                ...state,\n                counter: state.counter + 1\n            }\n        }\n        case DEC: {\n            return {\n                ...state,\n                counter: state.counter - 1\n            }\n        }\n        case ADD_FIVE: {\n            return {\n                ...state,\n                counter: state.counter + action.data\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport default CounterReducer;","import {\n    TODO_ADD,\n    TODO_DELETE,\n} from '../../constants/actionTypes';\n\nexport const initialState = {\n    todos: [],\n};\n\nconst TodosReducer = (state = initialState, action) => {\n    switch (action.actionTypes) {\n        case TODO_ADD: {\n            return {\n                ...state,\n                data: [...state.todos, action.data],\n            }\n        }\n        case TODO_DELETE: {\n            return {\n                ...state,\n                todos: state.todos.filter(_item => _item.value !== action.value)\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\n\nexport default TodosReducer;","export const TODO_ONCHANGE = 'TODO_ONCHANGE';\nexport const TODO_ADD = 'TODO_ADD';\nexport const TODO_DELETE = 'TODO_DELETE';","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\n// Reducers\nimport CounterReducer from './reducers/counter';\nimport TodosReducer from './reducers/todo';\n\nimport thunk from 'redux-thunk';\n\nimport createSagaMidleware from 'redux-saga';\n// import watchIncByUSer from './sagas/index'\nconst rootReducers = combineReducers({\n    counter: CounterReducer,\n    todo: TodosReducer\n})\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log('[Middleware] Dispatching', action);\n            const result = next(action);\n            console.log('[Middleware] next state', store.getState());\n            return result;\n        }\n    }\n};\n\nconst composeEnhancers = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\n\nconst sagaMiddelware = createSagaMidleware();\n\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(logger, thunk, sagaMiddelware)));\n\n// sagaMiddelware.run(watchIncByUSer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\n\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter >\n        <Provider store={store}>\n            < App />\n        </Provider>\n    </BrowserRouter>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}